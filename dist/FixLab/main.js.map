{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.styles.css","webpack:///./src/app/auth/authentication.service.ts","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/sign/sign.component.css","webpack:///./src/app/auth/sign/sign.component.html","webpack:///./src/app/auth/sign/sign.component.ts","webpack:///./src/app/components/answers/answers.component.css","webpack:///./src/app/components/answers/answers.component.html","webpack:///./src/app/components/answers/answers.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/discover/discover.component.html","webpack:///./src/app/components/discover/discover.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/notify/notify.component.css","webpack:///./src/app/components/notify/notify.component.html","webpack:///./src/app/components/notify/notify.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/services/answers.service.ts","webpack:///./src/app/services/posts.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/models/answers.ts","webpack:///./src/models/posts.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","\nimport { Component, OnInit } from  '@angular/core';\nimport { ApiService } from  './api.service';\nimport { Item } from  './api.service';\nimport { AuthenticationService } from './auth/authentication.service';\n\n@Component({\nselector:  'app-root',\ntemplateUrl:  './app.component.html',\nstyleUrls: ['./app.component.css']\n})\n\nexport  class  AppComponent  {\n    constructor(public auth: AuthenticationService) {};\n    title  =  'FixLab';\n     items:  Array<Item>;\n//constructor(private  apiService:  ApiService){\n}/*\nngOnInit(){\nthis.fetchData();\n}\nfetchData(){\nthis.apiService.fetch().subscribe((data:  Array<Item>)=>{\nconsole.log(data);\nthis.items  =  data;\n}, (err)=>{\nconsole.log(err);\n});\n}\n}*/","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule, Component } from '@angular/core'\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component'\n\n//Firebase:\nimport { AngularFireModule } from '@angular/fire';\nimport {AngularFireStorageModule} from '@angular/fire/storage'\n\n//Servicios:\nimport { PostsService } from './services/posts.service';\nimport { AnswersService } from './services/answers.service';\n\n//Router:\nimport { APP_ROUTING } from './app.routes';\n\n//Módulos:\nimport { AuthModule } from './auth/auth.module';\n\n//Ngx-Bootstrap:\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { ButtonsModule } from 'ngx-bootstrap';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { CarouselModule } from 'ngx-bootstrap/carousel';\nimport { ProgressbarModule } from 'ngx-bootstrap/progressbar';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\n\n//Componentes:\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { DiscoverComponent } from './components/discover/discover.component';\nimport { NotifyComponent } from './components/notify/notify.component';\nimport { AnswersComponent } from './components/answers/answers.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HomeComponent,\n    ProfileComponent,\n    NavbarComponent,\n    FooterComponent,\n    DiscoverComponent,\n    NotifyComponent,\n    AnswersComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AuthModule,\n    APP_ROUTING,\n    BsDropdownModule.forRoot(),\n    AlertModule.forRoot(),\n    AccordionModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TooltipModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    CollapseModule.forRoot(),\n    ModalModule.forRoot(),\n    TabsModule.forRoot(),\n    CarouselModule.forRoot(),\n    ProgressbarModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireStorageModule\n  ],\n  providers: [PostsService, AnswersService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardService } from './auth/auth-guard.service';\n\n//Componentes:\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DiscoverComponent } from './components/discover/discover.component';\nimport { NotifyComponent } from './components/notify/notify.component';\nimport { AnswersComponent } from './components/answers/answers.component';\n\nconst ROUTES: Routes = [\n    { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuardService],\n      children: [\n        {path: 'home', component: HomeComponent},\n        { path: 'profile', component: ProfileComponent },\n        { path: 'discover', component: DiscoverComponent },\n        { path: 'notify', component: NotifyComponent },\n        { path: 'answers', component: AnswersComponent }\n      ]\n  },\n  { path: '**', pathMatch: 'full', redirectTo: 'dashboard/home' }\n];\n\nexport const APP_ROUTING= RouterModule.forRoot(ROUTES);\n","import { Injectable } from '@angular/core'\nimport { Router, CanActivate } from '@angular/router'\nimport { AuthenticationService } from './authentication.service'\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  canActivate() {\n    if (!this.auth.isLoggedIn()) {\n      this.router.navigateByUrl('/')\n      return false\n    }\n    return true\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignComponent } from './sign/sign.component';\n\nconst routes: Routes = [\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: '*', component: SignComponent},\n  { path: '', pathMatch: 'full', redirectTo: '/*' }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n//Router:\nimport { AuthRoutingModule } from './auth-routing.module';\n\n//Servicios:\nimport { AuthenticationService } from './authentication.service'\nimport { AuthGuardService } from './auth-guard.service';\n\n//Componentes:\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignComponent } from './sign/sign.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule\n  ],\n  declarations: [RegisterComponent, LoginComponent, SignComponent],\n  providers: [AuthenticationService, AuthGuardService]\n})\nexport class AuthModule { }\n","module.exports = \".login-box\\n{\\n    background: #151515ba;\\n    color: #fff;\\n    text-align: center;\\n    box-sizing: border-box;\\n    border-radius: 20px;\\n}\\n  \\n.login-box .avatar \\n{\\n    height: 120px;\\n    position: static;\\n    top: 24px;\\n    left: calc(50% - 107px);\\n}\\n  \\n.login-box h1 \\n{\\n    margin: 0;\\n    padding: 0 0 20px;\\n    text-align: center;\\n    font-size: 22px;\\n}\\n  \\n.login-box label \\n{\\n    margin: 0;\\n    padding: 0;\\n    display: block;\\n}\\n  \\n.login-box input \\n{\\n    width: 100%;\\n    text-align: center;\\n    margin-bottom: 20px;\\n}\\n  \\n.login-box input[type=\\\"text\\\"], .login-box input[type=\\\"password\\\"] \\n{\\n    border: none;\\n    border-bottom: 1px solid azure;\\n    background: transparent;\\n    outline: none;\\n    height: 40px;\\n    color: #fff;\\n    font-size: 16px;\\n}\\n  \\n.login-box input[type=\\\"submit\\\"], input[type=\\\"button\\\"] \\n{\\n    border: none;\\n    outline: none;\\n    height: 40px;\\n    color: azure;\\n    font-size: 18px;\\n    border-radius: 20px;\\n}\\n  \\n.login-box input[type=\\\"submit\\\"], input[type=\\\"button\\\"]:hover\\n{\\n    cursor: pointer;\\n    color: azure;\\n}\\n  \\n.login-box a \\n{\\n    text-decoration: none;\\n    font-size: 12px;\\n    line-height: 20px;\\n    color: darkgrey;\\n}\\n  \\n.login-box a:hover\\n{\\n    color: azure;\\n}\\n  \\n.login-box hr\\n{\\n    color: #151515ba;\\n}\"","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, of } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { Router } from '@angular/router'\n\nexport interface UserDetails {\n  id_user:number\n  username: string\n  email: string\n  password: string\n  description:string\n  exp: number\n  iat: number\n}\n\nexport interface UserProfile {\n  description:string\n  image: string\n\n}\n\ninterface TokenResponse {\n  token: string\n}\n\nexport interface TokenPayload {\n  id_user:number\n  email: string\n  username: string\n  password: string\n}\n\n@Injectable()\nexport class AuthenticationService {\n  private token: string\n\n  constructor(private http: HttpClient, private router: Router) {\n  }\n\n  private saveToken(token: string): void {\n    localStorage.setItem('usertoken', token)\n    this.token = token\n  }\n\n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem('usertoken')\n    }\n    return this.token\n  }\n\n  public getUserDetails(): UserDetails {\n    const token = this.getToken()\n    let payload\n    if (token) {\n      payload = token.split('.')[1]\n      payload = window.atob(payload)\n      return JSON.parse(payload)\n    } else {\n      return null\n    }\n  }\n\n  public isLoggedIn(): boolean {\n    const user = this.getUserDetails()\n    if (user) {\n      return user.exp > Date.now() / 1000\n    } else {\n      return false\n    }\n  }\n\n  public register(user: TokenPayload): Observable<any> {\n    return this.http.post(`/users/register`, user)\n  }\n\n  public login(user: TokenPayload): Observable<any> {\n    const base = this.http.post(`/users/login`, user)\n\n    const request = base.pipe(\n      map((data: TokenResponse) => {\n        if (data.token) {\n          this.saveToken(data.token)\n        }\n        return data\n      })\n    )\n\n    return request\n  }\n\n  public logout(): void {\n    this.token = ''\n    window.localStorage.removeItem('usertoken')\n    this.router.navigateByUrl('/')\n  }\n\n  public editprofile(prof:UserProfile,id_user): Observable<any> {\n    return this.http.post('http://localhost:3000/users/update/'+id_user, prof)\n  }\n}\n","module.exports = \"<br><br>\\n<div class=\\\"py-5 text-center text-white\\\">\\n    <div class=\\\"container-fluid text-center\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"p-5 col-lg-6 col-10 mx-auto login-box\\\">\\n          <img src=\\\"/assets/images/logo.png\\\" class=\\\"avatar text-center\\\" alt=\\\"Logo FixLab\\\">\\n          <br>\\n          <h1>Accede a Fixlab</h1>\\n          <form (ngSubmit)=\\\"login(f)\\\" #f=\\\"ngForm\\\" novalidate=\\\"\\\">\\n\\n            <!--Email-->\\n              <input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" #email=\\\"ngModel\\\"\\n            [ngClass]= \\\"{'is-invalid':email.errors!=null && email.touched, 'is-valid':email.errors==null}\\\"\\n            [(ngModel)]=\\\"credentials.email\\\" required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" placeholder=\\\"Correo electrónico\\\">\\n              \\n              <!--Si es válido-->\\n              <div *ngIf=\\\"email.valid\\\" class=\\\"valid-feedback\\\"></div>\\n              <!--Si es inválido-->\\n              <div class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"email.errors?.required\\\">\\n                    <small>Este campo es requerido.</small>\\n                </div>\\n                <div *ngIf=\\\"email.errors?.pattern\\\">\\n                    <small>Se debe introducir un patrón de email válido.</small>\\n                </div>\\n              </div>\\n            <hr>\\n            \\n            <!--Password-->\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" \\n              #password=\\\"ngModel\\\" [(ngModel)]=\\\"credentials.password\\\" placeholder=\\\"Password\\\" \\n              [ngClass]= \\\"{'is-invalid':password.errors!=null && password.touched, 'is-valid':password.errors==null}\\\" required minlength=\\\"8\\\">\\n              <!--Si es válido-->\\n              <div *ngIf=\\\"email.valid\\\" class=\\\"valid-feedback\\\"></div>\\n              <!--Si es inválido-->\\n              <div class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"password.errors?.required\\\">\\n                      <small>Este campo es requerido.</small>\\n                  </div>\\n                  <div *ngIf=\\\"password.errors?.minlength\\\">\\n                      <small>El nombre debe tener al menos {{password.errors.minlength.requiredLength}} carácteres.</small>\\n                  </div>\\n              </div>           \\n            <hr>\\n\\n            <input class=\\\"btn btn-primary btn-block\\\" type=\\\"submit\\\" value=\\\"Acceder\\\" [disabled]=\\\"!f.valid\\\">\\n            <input class=\\\"btn btn-danger btn-block\\\" type=\\\"button\\\" value=\\\"Volver\\\" [routerLink]=\\\"['/']\\\">\\n            <hr>\\n\\n            <a [routerLink]=\\\"['/register']\\\" routerLinkActive=\\\"active\\\">¿No tienes una cuenta?</a>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","import { Component } from '@angular/core';\nimport { AuthenticationService, TokenPayload } from './../authentication.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../auth.styles.css']\n})\nexport class LoginComponent {\n  credentials: TokenPayload = {\n    id_user: 0,\n    email: '',\n    username:'',\n    password: ''\n  }\n\n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  login(form: NgForm) \n  {\n    this.auth.login(this.credentials).subscribe(\n      () => {\n        console.log(\"Iniciaste sesión\")\n        this.router.navigateByUrl('/dashboard/home')\n      },\n      err => {\n        console.error(err)\n      }\n    )\n  }\n}\n","module.exports = \"<br><br>\\n<div class=\\\"py-5 text-center text-white\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"p-5 col-lg-6 col-10 mx-auto login-box\\\">\\n          <img src=\\\"/assets/images/logo.png\\\" class=\\\"avatar text-center\\\" alt=\\\"Logo FixLab\\\">\\n          <br>\\n          <h1>¡Únete a nosotros!</h1>\\n          <form (ngSubmit)=\\\"register(f)\\\" #f=\\\"ngForm\\\" novalidate=\\\"\\\" method=\\\"POST\\\">\\n\\n            <!-- Nombre de usuario -->           \\n                <input type=\\\"text\\\" id=\\\"username\\\" name=\\\"username\\\" class=\\\"form-control\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"credentials.username\\\" [ngClass]=\\\"{'is-invalid':username.errors!=null && username.touched, 'is-valid':username.errors==null}\\\" required minlength=\\\"3\\\" placeholder=\\\"Nombre de usuario\\\">\\n                <!--Si no es válido-->\\n                <div class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"username.errors?.required\\\">\\n                        <small>Este campo es requerido.</small>\\n                    </div>\\n                    <div *ngIf=\\\"username.errors?.minlength\\\">\\n                        <small>El nombre debe tener al menos {{username.errors.minlength.requiredLength}} carácteres.</small>\\n                    </div>\\n                </div>\\n                <!--Si es válido-->\\n                <div *ngIf=\\\"username.valid\\\" class=\\\"valid-feedback\\\"></div>\\n            <hr>            \\n\\n            <!--Email-->\\n            <input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"credentials.email\\\"\\n          [ngClass]= \\\"{'is-invalid':email.errors!=null && email.touched, 'is-valid':email.errors==null}\\\" \\n          required pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\" placeholder=\\\"Correo electrónico\\\">\\n            \\n            <!--Si es válido-->\\n            <div *ngIf=\\\"email.valid\\\" class=\\\"valid-feedback\\\"></div>\\n            <!--Si es inválido-->\\n            <div class=\\\"invalid-feedback\\\">\\n              <div *ngIf=\\\"email.errors?.required\\\">\\n                  <small>Este campo es requerido.</small>\\n              </div>\\n              <div *ngIf=\\\"email.errors?.pattern\\\">\\n                  <small>Se debe introducir un patrón de email válido.</small>\\n              </div>\\n            </div>\\n            <hr>\\n            \\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"credentials.password\\\" placeholder=\\\"Password\\\" [ngClass]= \\\"{'is-invalid':password.errors!=null && password.touched, 'is-valid':password.errors==null}\\\" required minlength=\\\"8\\\">\\n            <!--Si es válido-->\\n            <div *ngIf=\\\"email.valid\\\" class=\\\"valid-feedback\\\"></div>\\n            <!--Si es inválido-->\\n            <div class=\\\"invalid-feedback\\\">\\n                <div *ngIf=\\\"password.errors?.required\\\">\\n                    <small>Este campo es requerido.</small>\\n                </div>\\n                <div *ngIf=\\\"password.errors?.minlength\\\">\\n                    <small>El nombre debe tener al menos {{password.errors.minlength.requiredLength}} carácteres.</small>\\n                </div>\\n            </div>              \\n            <hr>\\n\\n\\n            <input class=\\\"btn btn-primary btn-block\\\"  value=\\\"Registrase\\\" [disabled]=\\\"!f.valid\\\" type=\\\"submit\\\" >\\n            <input class=\\\"btn btn-danger btn-block\\\" type=\\\"button\\\" value=\\\"Volver\\\" [routerLink]=\\\"['/']\\\">\\n            <hr>\\n\\n            <a [routerLink]=\\\"['/login']\\\" routerLinkActive=\\\"active\\\">¿Ya dispone de una cuenta con nosotros?</a>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","import { Component } from \"@angular/core\";\nimport { AuthenticationService, TokenPayload } from \"./../authentication.service\";\nimport { Router } from \"@angular/router\";\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../auth.styles.css']\n})\nexport class RegisterComponent {\n  credentials: TokenPayload = {\n    id_user: 0,\n    email: \"\",\n    username: \"\",\n    password: \"\"\n  };\n  \n  constructor(private auth: AuthenticationService, private router: Router) {}\n\n  register(form: NgForm) {\n    this.auth.register(this.credentials).subscribe(\n      () => {\n        this.router.navigateByUrl(\"/home\");\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n}\n","module.exports = \"\\n.saludo{\\n    margin: 0 auto;\\n    width: 70%;   \\n    justify-content: center;\\n}\\n\\n.titulo{    \\n    text-align: center;\\n    color: white;\\n    font-size: 90px;\\n    padding: 2px;\\n    background-size: cover;\\n    padding: 1px;\\n    font-family: 'Noto Sans KR', sans-serif;\\n}\\n\\n.botones{\\n    width: 60%;\\n    margin: 0 auto;\\n    position: relative;\\n    display: block;\\n    font-family: 'Noto Sans KR', sans-serif;\\n}\\n\\n.btn-dark{\\nbackground-color: #060504;\\nborder-color: #060504;  \\n}\\n\\n.btn-dark:hover{\\nbackground-color:#343a40;\\nborder-color: #343a40;\\n}\\n\\nimg\\n{\\n    width: 300px;\\n    height: 200px;\\n}\\n\\n.dark\\n{\\n    background-color: #151515ba;\\n    color: #fff;\\n    box-sizing: border-box;\\n    border-radius: 20px;\\n}   \"","module.exports = \"\\n<div class=\\\"container text-center\\\">\\n<img src=\\\"/assets/images/logo.png\\\" class=\\\"img text-center\\\" alt=\\\"Logo FixLab\\\">\\n</div>\\n<div class=\\\"container-fluid\\\">  \\n  <div class=\\\"saludo\\\">\\n    <div class=\\\"titulo text-*-center\\\">\\n         </div>\\n        <div class=\\\"botones\\\">\\n        <a class=\\\"btn btn-lg btn-block btn-dark\\\" role=\\\"button\\\" [routerLink]=\\\"['/login']\\\">Inicia sesión</a>\\n        <a class=\\\"btn  btn-lg btn-light btn-block\\\" role=\\\"button\\\" [routerLink]=\\\"['/register']\\\">Regístrate</a>         \\n    </div>\\n  </div>\\n</div> \\n\\n<br><br>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sign',\n  templateUrl: './sign.component.html',\n  styleUrls: ['./sign.component.css']\n})\nexport class SignComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-answers',\n  templateUrl: './answers.component.html',\n  styleUrls: ['./answers.component.css']\n})\nexport class AnswersComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<br>\\n<router-outlet></router-outlet>\\n<br>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<!--Visualización de tarjetas-->\\n<div class=\\\"container-fluid\\\" *ngFor=\\\"let post of pposts\\\">\\n\\t<div class=\\\"notice notice-info notice-lg\\\">\\n    \\t<strong>{{post.title}}</strong>\\n    \\t<hr>\\n    \\t<img *ngIf=\\\"post.image==null\\\" src=\\\"/assets/images/no-image.png\\\" class=\\\"img-fluid avatar\\\">\\n        <img *ngIf=\\\"post.image!=null\\\" src={{post.image}} class=\\\"img-fluid avatar\\\">\\n    \\t<br>\\n    \\t<p>{{ post.description }}</p>\\n    \\t<div class=\\\"text-right\\\">\\n        \\t&nbsp;\\n        \\t<button type=\\\"button\\\" class=\\\"btn btn-info btn-modify\\\"\\n\\t\\t\\t   tooltip=\\\"Ver respuestas\\\" placement=\\\"bottom\\\">\\n\\t\\t      \\t<i class=\\\"far fa-eye\\\"></i>\\n\\t\\t  \\t</button>\\n\\t\\t\\t&nbsp;\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-modify\\\" (click)=\\\"reply(template1, post)\\\"\\n\\t\\t\\t   tooltip=\\\"Responder\\\" placement=\\\"bottom\\\">\\n\\t\\t      \\t<i class=\\\"fas fa-reply\\\"></i>\\n\\t\\t  \\t</button>\\n\\t\\t  \\t&nbsp;\\n    \\t</div>\\n\\t</div>\\t\\n</div>\\n\\n\\t<!--Modal para responder a una publicación-->\\n<ng-template #template1>\\n\\t<div class=\\\"modal-header\\\">\\n\\t    <h4 class=\\\"modal-title pull-left\\\">Crear nueva publicación</h4>\\n\\t    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef1.hide()\\\">\\n\\t      <span aria-hidden=\\\"true\\\">&times;</span>\\n\\t    </button>\\n\\t</div>\\n\\n\\t<div class=\\\"modal-body\\\">\\n\\t\\t<div class=\\\"container text-center\\\">\\t\\n\\t\\t\\t<div class=\\\"tab-content\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<form #f=\\\"ngForm\\\" novalidate=\\\"\\\" method=\\\"POST\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\"><h4>Escribe tu respuesta</h4></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea type=\\\"text\\\"  name=\\\"text\\\" class=\\\"form-control\\\"  placeholder=\\\"Tu respuesta...\\\" [(ngModel)]=\\\"newAnswer.text\\\">\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t</textarea>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"descripcion\\\"><h4>Precio</h4></label><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" name=\\\"price\\\" placeholder=\\\"0.00$\\\" [(ngModel)]=\\\"newAnswer.price\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<hr>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary\\\" value=\\\"POST\\\" (click)=\\\"addreply(f)\\\" type=\\\"submit\\\">Publicar respuesta\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-pencil-alt\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<br><br>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-cancelar btn-danger\\\" (click)=\\\"modalRef1.hide()\\\">Cancelar\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"far fa-times-circle\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t  </div>\\n</ng-template>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport {AuthenticationService} from '../../auth/authentication.service';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport {PostsService} from '../../services/posts.service';\nimport {AnswersService} from '../../services/answers.service';\nimport { NgForm } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { Posts } from '../../../models/posts';\nimport { Answers } from '../../../models/answers';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styleUrls: ['../home/home.component.css']\n})\nexport class DiscoverComponent implements OnInit {\n\npposts: Posts[];\nnewAnswer: Answers = new Answers();\nselectedPost: Posts;\ntextValue;\npriceValue;\nmessage: string;\n\nmodalRef1: BsModalRef;\n\n  constructor(private modalService: BsModalService, private router: Router, private posts: PostsService, private answers: AnswersService, private auth: AuthenticationService, private http: HttpClient) \n  { \n    //Obtiene todas las publicaciones de usuario al inicio\n    this.getPosts();\n  }\n\n  getPosts() {\n    return this.posts.getposts()\n      .subscribe(\n          pposts => {\n            this.pposts = pposts\n          }\n  )\n  };\n\n  reply(template: TemplateRef<any>, replyPost: Posts) \n  {\n    this.selectedPost = replyPost;\n\n    this.newAnswer.id_answer= 0;\n    this.newAnswer.text=\"\";\n    this.newAnswer.price=0;\n    this.newAnswer.unlocked = false;\n    this.newAnswer.valorated = false;\n    this.newAnswer.id_owner= this.auth.getUserDetails().id_user;\n    this.newAnswer.id_inpost = this.selectedPost.id_post;\n    \n    this.modalRef1 = this.modalService.show(template);\n    this.modalRef1.hide();\n  }\n\n  addreply(form: NgForm)\n  {\n    if(form.value.text === \"\")\n    {\n      alert(\"Debe escribir una respuesta\");\n      return;\n    }\n    else if(form.value.price === \"\")\n    {\n      alert(\"Debe poner un precio\");\n      return;\n    }\n    else \n    {\n      var newAnswer = {\n        id_answer: 0,\n        text: form.value.text,\n        price : form.value.price,\n        unlocked: false,\n        valorated: false,\n        id_owner : this.auth.getUserDetails().id_user,\n        id_inpost: this.selectedPost.id_post        \n      };\n    }\n\n    this.answers.addreply(this.newAnswer).subscribe(\n      () => {\n        this.message = \"Answers Published Successfully!\";\n        console.log(this.message);\n      },\n      err => {\n        console.error(err);\n      }\n    );\n    this.modalRef1.hide();    \n\n  }\n\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container-fluid\\n{\\n\\tbackground-color: #151515;\\n\\tcolor: #fff;\\n}\\n\\na\\n{\\n\\tcolor: grey;\\n}\\n\\nimg\\n{\\n\\twidth: 200px;\\n\\theight: 100px;\\n}\"","module.exports = \"<div class=\\\"container-fluid\\\">\\t\\n\\t<div class=\\\"py-3\\\" >\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4 col-6 p-3\\\">\\n          <img src=\\\"assets/images/logo.png\\\">\\n        </div>\\n        <div class=\\\"col-lg-4 col-6 p-3\\\">\\n          <p> <a href=\\\"https://goo.gl/maps/AUq7b9W7yYJ2\\\" target=\\\"_blank\\\"> Fake street, 100 <br>NYC - 20179, USA</a> </p>\\n          <p> <a href=\\\"tel:+246 - 542 550 5462\\\">+1 - 256 845 87 86</a> </p>\\n          <p class=\\\"mb-0\\\"> <a href=\\\"mailto:info@outlook.com\\\">info@outlook.com</a> </p>\\n        </div>\\n        <div class=\\\"col-md-4 p-3\\\">\\n          <h5> <b>Acerca del servicio</b> </h5>\\n          <p class=\\\"mb-0\\\"> ¿Problemas con sus dispositivos? ¡Encuentre las mejores soluciones de mano de nuestra gran comunidad!.</p>\\n        </div>\\n      </div>\\n      <hr>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12 text-center\\\">\\n          <small class=\\\"mb-0 mt-2\\\">©2019 - Todos los derechos reservados</small>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>  \\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".btn-create, .btn-modify, .btn-delete\\n{\\n\\tborder-radius: 60%;\\n box-shadow: 0 5px 8px -6px rgba(0,0,0,.2);\\n}\\n\\n\\n.notice {\\n    padding: 15px;\\n    background-color: #fafafa;\\n    border-left: 6px solid #7f7f84;\\n    margin-bottom: 10px;\\n    box-shadow: #202123;\\n}\\n\\n\\n.notice-lg {\\n    padding: 35px;\\n    font-size: large;\\n}\\n\\n\\n.notice-success {\\n    border-color: #80D651;\\n}\\n\\n\\n.notice-success>strong {\\n    color: #80D651;\\n}\\n\\n\\n.notice-info {\\n    /*border-color: #45ABCD;*/\\n    border-color: #ac45cd;\\n}\\n\\n\\n.notice-info>strong {\\n    /*color: #45ABCD;*/\\n    color: #ac45cd;\\n}\\n\\n\\n.modal-header\\n{\\n    background: url('/assets/images/fondo.jpg') center top;\\n    color: white;\\n}\\n\\n\\n.hidden \\n{  \\n    display: none;\\n}\\n\\n\\nhr \\n{\\n    background-color: azure;\\n}\\n\\n\\n.row \\n{\\n    padding: 20px;\\n}\\n\\n\\n/*Prop. para imágenes*/\\n\\n\\n.img-content {\\n    display: block;\\n    width: 200px;\\n    height: 200px;\\n    margin-left: auto;\\n    margin-right: auto;\\n    border-radius: 50%;\\n}\\n\\n\\n.avatar\\n{\\n    display: block;\\n    width: 300px;\\n    height: 300px;\\n    margin-left: auto;\\n    margin-right: auto;    \\n}\\n\\n\\n.modal-body\\n{\\n    color: #151515;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <h1 class=\\\"text-center\\\">Mis Publicaciones</h1>\\n    <br>\\n\\n    <!--Agregue un nuevo post-->\\n    <div class=\\\"containet text-center\\\">\\n       \\t<button type=\\\"button\\\" class=\\\"btn btn-success btn-create\\\" (click)=\\\"create(template1)\\\"\\n        \\ttooltip=\\\"Agregar nueva publicación\\\" placement=\\\"bottom\\\">\\n      \\t\\t<i class=\\\"fas fa-plus fa-2x\\\"></i>\\n  \\t\\t</button>\\n    </div>\\n    <hr>\\n\\n    <!--Visualización de tarjetas-->\\n    <div class=\\\"container-fluid\\\" *ngFor=\\\"let post of pposts\\\">\\n    \\t<div class=\\\"notice notice-info notice-lg\\\">\\n        \\t<strong>{{post.title}}</strong>\\n        \\t<hr>\\n        \\t<img *ngIf=\\\"post.image!=null\\\" src=\\\"{{post.image}}\\\" class=\\\"img-fluid text-center avatar\\\">\\n        \\t<img *ngIf=\\\"post.image==null\\\" src=\\\"/assets/images/no-image.png\\\" class=\\\"img-fluid text-center avatar\\\">\\n        \\t<br>\\n        \\t<p>{{ post.description }}</p>\\n\\n        \\t<div class=\\\"text-right\\\">\\n\\t        \\t<!--&nbsp;-->\\n\\t        \\t<!--button type=\\\"button\\\" class=\\\"btn btn-info btn-modify\\\" (click)=\\\"answer(template4)\\\"\\n\\t\\t\\t\\t   tooltip=\\\"Ver detalles\\\" placement=\\\"bottom\\\">\\n\\t\\t\\t      \\t<i class=\\\"far fa-eye\\\"></i>\\n\\t\\t\\t  \\t</button-->\\n\\t\\t\\t\\t&nbsp;\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-primary btn-modify\\\" (click)=\\\"modify(template2, post)\\\"\\n\\t\\t\\t\\t   tooltip=\\\"Modificar la publicación\\\" placement=\\\"bottom\\\">\\n\\t\\t\\t      \\t<i class=\\\"fas fa-pencil-alt\\\"></i>\\n\\t\\t\\t  \\t</button>\\n\\t\\t\\t  \\t&nbsp;\\n\\t\\t\\t  \\t<button type=\\\"button\\\" class=\\\"btn btn-danger btn-delete\\\" (click)=\\\"delet(template3, post)\\\"\\n\\t\\t\\t  \\t\\ttooltip=\\\"Eliminar la publicación\\\" placement=\\\"bottom\\\">\\n\\t\\t\\t      \\t<i class=\\\"fas fa-trash-alt\\\"></i>\\n\\t\\t\\t  \\t</button>\\n        \\t</div>\\n    \\t</div>\\t\\n\\t</div>\\n</div>\\n\\n<!--Modal para crear la publicación-->\\n<ng-template #template1>\\n\\t<div class=\\\"modal-header\\\">\\n\\t    <h4 class=\\\"modal-title pull-left\\\">Crear nueva publicación</h4>\\n\\t    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef1.hide()\\\">\\n\\t      <span aria-hidden=\\\"true\\\">&times;</span>\\n\\t    </button>\\n\\t</div>\\n\\n\\t<div class=\\\"modal-body\\\">\\n\\t\\t<div class=\\\"container text-center\\\">\\t\\n\\t\\t\\t<div class=\\\"tab-content\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t<img *ngIf=\\\"this.imageUrl==null\\\" src=\\\"/assets/images/no-image.png\\\" class=\\\"img-fluid img-circle img-thumbnail profile-pic img-content\\\">\\n                    <img *ngIf=\\\"this.imageUrl!=null\\\" src={{this.imageUrl}} class=\\\"img-fluid img-circle img-thumbnail profile-pic img-content\\\">\\n\\t\\t\\t\\t\\t<h6>Seleccione la foto para el producto</h6>\\n\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"container\\\">\\n\\n\\t\\t\\t\\t\\t\\t<!--Barra de progreso-->\\n\\t\\t\\t\\t\\t\\t<progressbar [value]=\\\"uploadProgress| async\\\" type=\\\"primary\\\" [striped]=\\\"true\\\" [animate]=\\\"true\\\"></progressbar>\\n\\n\\t\\t\\t\\t\\t\\t<!--Muestra el progreso de la barra-->\\n\\t\\t\\t\\t\\t\\t<div class=\\\"item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tProgress: {{ (uploadProgress | async) / 100 | percent }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"downloadURL | async; let downloadSrc\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n            \\t\\t\\t<p>La foto se cargó correctamente</p>\\n        \\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t<!--Se sube una nueva foto para el usuario-->\\n\\t\\t\\t\\t\\t\\t<div class=\\\"item\\\">\\n\\n\\t\\t\\t\\t\\t\\t\\t<input #inputFile class=\\\"hidden\\\" type=\\\"file\\\" (change)=\\\"upload($event)\\\" accept=\\\".png,.jpg\\\">\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"inputFile.click()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tSubir foto\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-upload\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<hr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t<form #f=\\\"ngForm\\\" novalidate=\\\"\\\" method=\\\"POST\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\"><h4>Título</h4></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\"  name=\\\"title\\\" class=\\\"form-control\\\"  placeholder=\\\"Nombre del Post\\\" [(ngModel)]=\\\"newPost.title\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"descripcion\\\"><h4>Descripción</h4></label><br>\\n\\t\\t\\t\\t\\t\\t\\t\\t<textarea type=\\\"text\\\" name=\\\"description\\\" placeholder=\\\"Descripcion del Post\\\" [(ngModel)]=\\\"newPost.description\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<hr>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary\\\" value=\\\"POST\\\" (click)=\\\"addpost(f)\\\" type=\\\"submit\\\">Crear Publicación\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-pencil-alt\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t<br><br>\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-cancelar btn-danger\\\" (click)=\\\"modalRef1.hide()\\\">Cancelar\\n\\t\\t\\t\\t\\t\\t\\t<i class=\\\"far fa-times-circle\\\"></i>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>\\n\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t  </div>\\n</ng-template>\\n\\n<!--Modal para modificar la publicación-->\\n<ng-template #template2>\\n\\t<div class=\\\"modal-header\\\">\\n\\t\\t<h4 class=\\\"modal-title pull-left\\\">Modificar publicación</h4>\\n\\t\\t<button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef2.hide()\\\">\\n\\t  \\t\\t<span aria-hidden=\\\"true\\\">&times;</span>\\n\\t\\t</button>\\n\\t</div>\\n\\t<div class=\\\"modal-body\\\">\\n\\t\\t<div class=\\\"container text-center\\\">\\n\\t\\t\\t<div class=\\\"tab-content\\\">\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<form #f=\\\"ngForm\\\" class=\\\"form\\\" id=\\\"ProductForm\\\">\\n\\t\\t\\t\\t\\t<img *ngIf=\\\"selectedPost.image==null\\\" src=\\\"/assets/images/no-image.png\\\" class=\\\"img-fluid img-circle img-thumbnail profile-pic img-content\\\">\\n                    <img *ngIf=\\\"selectedPost.image!=null\\\" src={{selectedPost.image}} class=\\\"img-fluid img-circle img-thumbnail profile-pic img-content\\\">\\n\\t\\t\\t\\t\\t<h6>Seleccione la foto para el producto</h6>\\n\\t\\t\\t\\t\\t<br>\\n\\n\\t\\t\\t\\t\\t<div class=\\\"container\\\">\\n\\t\\t\\t\\t\\t\\t<!--Barra de progreso-->\\n\\t\\t\\t\\t\\t\\t<progressbar [value]=\\\"uploadProgress| async\\\" type=\\\"primary\\\" [striped]=\\\"true\\\" [animate]=\\\"true\\\"></progressbar>\\n\\n\\t\\t\\t\\t\\t\\t<!--Muestra el progreso de la barra-->\\n\\t\\t\\t\\t\\t\\t<div class=\\\"item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tProgress: {{ (uploadProgress | async) / 100 | percent }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"downloadURL | async; let downloadSrc\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n            \\t\\t\\t<p>La foto se cargó correctamente</p>\\n        \\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<!--Se sube una nueva foto para el usuario-->\\n\\t\\t\\t\\t\\t\\t<div class=\\\"item\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--Selecciona un archivo .png o .jpg-->\\n\\t\\t\\t\\t\\t\\t\\t\\t<input #inputFile class=\\\"hidden\\\" type=\\\"file\\\" (change)=\\\"upload($event)\\\" accept=\\\".png,.jpg\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<!--Botón para poner en funcionamiento el input-->\\n\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"inputFile.click()\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tSubir foto\\n\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-upload\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<hr>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\"><h4>Título</h4></label>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input [(ngModel)]=\\\"nameValue\\\" #name=\\\"ngModel\\\" ngModel type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"{{selectedPost.title}}\\\">\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"descripcion\\\"><h4>Descripción</h4></label><br>\\n\\t\\t\\t\\t\\t\\t\\t<textarea [(ngModel)]=\\\"descriptionValue\\\" #descripcion=\\\"ngModel\\\" ngModel type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"descripcion\\\" id=\\\"descripcion\\\" placeholder=\\\"{{selectedPost.description}}\\\"></textarea>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<hr>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group text-center\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-primary\\\" (click)=\\\"update(f)\\\" type=\\\"submit\\\">Actualizar\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-sync-alt\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t\\t<br><br>\\n\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-cancelar btn-danger\\\" (click)=\\\"modalRef2.hide()\\\">Cancelar\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"far fa-times-circle\\\"></i>\\n\\t\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</form>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</ng-template>\\n\\n<!--Modal para eliminar la publicación-->\\n<ng-template #template3>\\n\\t<div class=\\\"modal-header\\\">\\n\\t\\t<h4 class=\\\"modal-title pull-left\\\">Eliminar publicación</h4>\\n\\t    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef3.hide()\\\">\\n\\t      <span aria-hidden=\\\"true\\\">&times;</span>\\n\\t    </button>\\n\\t</div>\\n\\t<div class=\\\"modal-body\\\">\\n\\t\\t¿Desea borrar de forma permanente la publicación seleccionada?\\n\\t\\t<br><br>\\n\\t\\t<div class=\\\"text-center\\\">\\n\\t\\t\\t<button (click)=\\\"delete()\\\" class=\\\"btn btn-success\\\" type=\\\"button\\\">Sí</button>\\n\\t\\t\\t&nbsp;\\n\\t\\t\\t<button (click)=\\\"modalRef3.hide()\\\" class=\\\"btn btn-danger btn-cancelar\\\" type=\\\"button\\\">No</button>\\n\\t\\t</div>\\n\\t</div>\\n</ng-template>\\n\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\nimport {AuthenticationService} from '../../auth/authentication.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport {PostsService} from '../../services/posts.service';\nimport {AnswersService} from '../../services/answers.service';\nimport { AngularFireStorageReference, AngularFireStorage } from '@angular/fire/storage';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { post } from 'selenium-webdriver/http';\nimport { Posts } from '../../../models/posts';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  pposts: Posts[];\n  message: string;\n  selectedPost: Posts;\n  nameValue;\n  descriptionValue;\n  imageUrl: string = null;\n  oldimageUrl: string = null;\n  newPost: Posts = new Posts();\n  uploadProgress: Observable<number>; \n  ref: AngularFireStorageReference;\n  downloadURL: Observable<string>;\n\n  modalRef1: BsModalRef;\n  modalRef2: BsModalRef;\n  modalRef3: BsModalRef;\n  modalRef4: BsModalRef;\n\n  constructor(private modalService: BsModalService, private router: Router, private posts: PostsService, private auth: AuthenticationService, private http: HttpClient, private storage: AngularFireStorage) \n  { \n    //Obtiene todas las publicaciones de usuario al inicio\n    const id = this.auth.getUserDetails().id_user;\n    this.posts.getpostsOwner(id).subscribe(pposts => this.pposts = pposts);\n  }\n \n  create(template: TemplateRef<any>) \n  {\n    this.newPost.id_post= 0;\n    this.newPost.title=\"\";\n    this.newPost.description=\"\";\n    this.newPost.image=\"\";\n    this.newPost.id_owner= this.auth.getUserDetails().id_user;\n    this.newPost.publish_date= new Date();\n    this.newPost.resolved = false;\n    this.modalRef1 = this.modalService.show(template);\n    this.modalRef1.hide();\n  }\n\n  modify(template: TemplateRef<any>, editPost: Posts) \n  {\n    this.selectedPost = editPost;\n    console.log(this.selectedPost);\n    this.nameValue= this.selectedPost.title;\n    this.descriptionValue = this.selectedPost.description;\n    this.modalRef2 = this.modalService.show(template);\n    this.modalRef2.hide();\n  }\n\n  delet(template: TemplateRef<any>, deletePost: Posts) \n  {\n    this.selectedPost = deletePost;\n    console.log(this.selectedPost);\n    this.modalRef3 = this.modalService.show(template);\n    this.modalRef3.hide();\n  }\n\n  addpost(form: NgForm) \n  {\n\n    if(form.value.title === \"\")\n    {\n      alert(\"Debe escribir un título\");\n      return;\n    }\n    else if(form.value.descripcion === \"\")\n    {\n      alert(\"Debe escribir una descripcion\");\n      return;\n    }\n    else\n    {\n      var newPost = {\n      id_post : 0,\n      title : form.value.name,\n      description : form.value.descripcion,\n      id_owner : this.auth.getUserDetails().id_user,\n      publish_date : new Date(),\n      resolved : false};\n    }\n\n    if(this.imageUrl!=null)\n    {\n      this.newPost.image = this.imageUrl;\n    }\n\n    this.imageUrl=null; \n\n    this.posts.addpost(this.newPost).subscribe(\n      () => {\n        this.message = \"Post Created Successfully!\";\n        console.log(this.message);\n      },\n      err => {\n        console.error(err);\n      }\n    );\n    this.modalRef1.hide();\n  }\n\n  update(form: NgForm) {\n\n    if(form.value.name != \"\"){\n      this.selectedPost.title = form.value.name;\n    }\n    if(form.value.descripcion != \"\"){\n      this.selectedPost.description = form.value.descripcion;\n    }\n\n    if(this.imageUrl!=null)\n    {\n      this.oldimageUrl=this.selectedPost.image;\n      this.selectedPost.image=this.imageUrl;\n      //this.deleteImage(this.oldimageUrl);\n      this.imageUrl=null;\n    }\n\n    console.log(this.selectedPost);\n\n    this.posts.updatePost(this.selectedPost)\n        .subscribe(result => this.message = \"Post Updated Successfully!\");\n    this.modalRef2.hide();\n\n  }\n\n  delete() \n  {\n    this.posts.deletePost(this.selectedPost).subscribe(\n      () => {\n        this.message = \"Post Deleted Successfully!\";\n        console.log(this.message);\n      },\n      err => {\n        console.error(err);\n      }\n    );\n    this.modalRef3.hide();\n\n  }\n\n\n upload(event) \n  {\n    // Obtiene la imagen:\n    const file = event.target.files[0];\n    \n    // Genera un ID random para la imagen:\n    const randomId = Math.random().toString(36).substring(2);\n    const filepath = `Posts_Images/${randomId}`;\n    // Cargar imagen:\n    const task = this.storage.upload(filepath, file);\n    this.ref = this.storage.ref(filepath);\n    // Observa los cambios en el % de la barra de progresos:\n    this.uploadProgress = task.percentageChanges();\n    // Notifica cuando la URL de descarga está disponible:\n    task.snapshotChanges().pipe(\n      finalize(() => {\n        this.downloadURL = this.ref.getDownloadURL();  \n        this.downloadURL.subscribe(url => {this.imageUrl = url} );\n        console.log(this.imageUrl);\n      })\n    ).subscribe();\n  }\n\n  \n  ngOnInit() \n  {\n    \n  }\n\n}\n\n","module.exports = \"* \\n{\\n    box-sizing: border-box;\\n}\\n\\n.navbar-dark\\n{\\n    background-color:#151515;\\n    text-align: center;\\n}\\n\\n.logo\\n{\\n\\twidth: 100px;\\n\\theight: 50px;\\n    padding:6px;\\t\\n}\\n\\n.btn-dark\\n{\\n\\tbackground-color: #151515;\\n}\\n\\n.dropdown-menu, .dropdown-item:hover\\n{\\n\\tbackground-color: #151515;\\n\\tcolor: #fff;\\n}\\n\\n.dropdown-divider\\n{\\n\\tborder-top: 1px solid #5a5a5a;\\n}\\n\\na\\n{\\n\\tcolor: grey;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark\\\" >\\n  <div class=\\\"container-fluid\\\">\\n\\n    <a class=\\\"navbar-brand d-none d-md-block\\\" routerLink=\\\"/dashboard/home\\\">\\n      <img class=\\\"logo\\\" src=\\\"assets/images/logo_1.png\\\">\\n    </a>\\n\\n    <button class=\\\"collapsed navbar-toggler\\\" (click)=\\\"isCollapsed = !isCollapsed\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-controls=\\\"collapseBasic\\\" type=\\\"button\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n      \\n    <div class=\\\"navbar-collapse collapse\\\" id=\\\"collapseBasic\\\" [collapse]=\\\"isCollapsed\\\">\\n        <ul class=\\\"navbar-nav mx-auto\\\">\\n          \\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard/home\\\">\\n              <i class=\\\"fas fa-heart\\\"></i>\\n              <br>\\n              <small>Mis publicaciones</small>\\n            </a>  \\n          </li>\\n\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard/notify\\\">\\n              <i class=\\\"fas fa-bell\\\"></i>\\n              <br>\\n              <small>Notificaciones</small>\\n            </a>  \\n          </li>\\n\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard/discover\\\">\\n              <i class=\\\"fab fa-safari\\\"></i>\\n              <br>\\n              <small>Discover</small>\\n            </a> \\n          </li>\\n\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard/answers\\\">\\n              <i class=\\\"fas fa-comment-dots\\\"></i>\\n              <br>\\n              <small>Mis respuestas</small>\\n            </a> \\n          </li>\\n        </ul>\\n      \\n\\n      <ul class=\\\"navbar-nav text-center\\\">        \\n          <li class=\\\"nav-item\\\"> \\n            <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard/profile\\\">\\n              <i class=\\\"fas fa-user-cog\\\"></i>\\n              <br><small>Perfil</small>\\n            </a> </li>\\n          <li class=\\\"nav-item\\\"> \\n            <a class=\\\"nav-link\\\" routerLink=\\\"/start\\\" (click)=\\\"auth.logout()\\\">\\n              <i class=\\\"fas fa-sign-out-alt\\\"></i>\\n              <br><small>Cerrar sesión</small>\\n            </a> \\n          </li>\\n\\n      </ul>\\n      </div>      \\n\\n    </div>    \\n  </nav>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from '../../auth/authentication.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n\tisCollapsed = false;\t\n\n  constructor(private auth: AuthenticationService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  notify works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notify',\n  templateUrl: './notify.component.html',\n  styleUrls: ['./notify.component.css']\n})\nexport class NotifyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"img\\n{\\n    margin:3px;\\n    padding:2px;\\n    height: 250px;\\n    width: 250px;\\n    border-radius: 70%;\\n}\\n\\n.box\\n{\\n    text-align: center;\\n    color: #151515;\\n    box-sizing: border-box;\\n    background-color: #fafafa;\\n    box-shadow: 0 5px 8px -6px rgba(0,0,0,.2);\\n    padding: 15px;\\n}\\n\\ninput \\n{\\n    width: 100%;\\n    margin-bottom: 20px;\\n}\\n\\ninput[type=\\\"text\\\"], input[type=\\\"password\\\"] \\n{\\n    outline: none;\\n    height: 40px;\\n    font-size: 16px;\\n}\\n\\ninput[type=\\\"submit\\\"], input[type=\\\"button\\\"] \\n{\\n    border: none;\\n    outline: none;\\n    height: 40px;\\n    color: azure;\\n    font-size: 18px;\\n}\\n\\nhr\\n{\\n    background-color: azure;\\n}\\n\\n.hidden \\n{  \\n    display: none;\\n}\\n\\n\"","module.exports = \"<div class=\\\"container box\\\">\\n\\n    <!--Imagen de Perfil-->\\n    <div class=\\\"img-profile\\\">\\n        <img class=\\\"img-fluid img-circle img-thumbnail\\\" *ngIf=\\\"this.auth.getUserDetails().image && this.imageUrl==null\\\" src=\\\"{{auth.getUserDetails().image}}\\\">\\n        <img class=\\\"img-fluid img-circle img-thumbnail\\\" *ngIf=\\\"this.auth.getUserDetails().image == null && this.imageUrl==null\\\" src=\\\"/assets/images/sin-perfil.png\\\">\\n        <img class=\\\"img-fluid profile-pic\\\" *ngIf=\\\"this.imageUrl!=null\\\" src={{this.imageUrl}} class=\\\"img-thumbnail img-circle img-fluid\\\">\\n\\n    </div>\\n    <br>\\n\\n    <!--Para actualizar/añadir imagen de perfil a un usuario-->\\n    <div class=\\\"container\\\">\\n       <!--Barra de progreso-->\\n       <progressbar [value]=\\\"uploadProgress| async\\\" type=\\\"primary\\\" [striped]=\\\"true\\\" [animate]=\\\"true\\\"></progressbar>\\n\\n        <!--Muestra el progreso de la barra-->\\n        <div class=\\\"container\\\">\\n            Progress: {{ (uploadProgress | async) / 100 | percent }}\\n        </div>\\n        <br>\\n        <div *ngIf=\\\"downloadURL | async; let downloadSrc\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\">\\n            <p>La foto se cargó correctamente</p>\\n        </div>\\n        <br>\\n        <!--Se sube una nueva foto para el usuario-->\\n        <div class=\\\"item\\\">\\n            <!--Selecciona un archivo .png o .jpg-->\\n            <input #inputFile class=\\\"hidden\\\" type=\\\"file\\\" (change)=\\\"upload($event)\\\" accept=\\\".png,.jpg\\\">\\n            <!--Botón para poner en funcionamiento el input-->\\n            <button type=\\\"button\\\" class=\\\"btn btn-lg btn-success\\\" (click)=\\\"inputFile.click()\\\">\\n                Subir foto\\n                <i class=\\\"fas fa-upload\\\"></i>\\n            </button>\\n        </div>\\n    </div>\\n\\n    <!--Se muestran los otros datos del usuario-->\\n    <div>\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"tab-pane active\\\" id=\\\"home\\\">\\n            \\t<hr>\\n                   \\t<form (ngSubmit)=\\\"editprofile(f)\\\" #f=\\\"ngForm\\\" novalidate=\\\"\\\" method=\\\"POST\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-xs-6\\\">\\n                               \\t<label for=\\\"first_name\\\"><h4>Nombre de Usuario</h4></label>\\n                                <input type=\\\"text\\\" disabled\\n                                placeholder=\\\"{{auth.getUserDetails()?.username  | titlecase}}\\\">\\n                          \\t</div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-xs-6\\\">\\n                                <label for=\\\"email\\\"><h4>Email</h4></label>\\n                                <input type=\\\"text\\\" disabled \\n                                placeholder=\\\"{{auth.getUserDetails()?.email}}\\\">\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-xs-6\\\">\\n                                <label for=\\\"description\\\"><h4>Descripción</h4></label>\\n                                <input #description type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" \\n                                id=\\\"description\\\" placeholder=\\\"{{auth.getUserDetails()?.description}}\\\" [(ngModel)]=\\\"credentials.description\\\" >\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <div class=\\\"col-xs-12\\\">\\n                                <br>\\n                                <button class=\\\"btn btn-lg btn-success\\\" type=\\\"submit\\\">\\n                                    Actualizar <i class=\\\"fas fa-sync-alt\\\"></i>\\n                               \\t</button>\\n                            </div>\\n                                </div>\\n                    </form>\\n                    <hr>\\n            </div>\\n        </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService, UserProfile} from '../../auth/authentication.service';\nimport { Router } from \"@angular/router\";\nimport { NgForm } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { AngularFireStorageReference, AngularFireStorage } from '@angular/fire/storage';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  credentials: UserProfile = {\n    description: '',\n    image: ''\n  };\n\n  imageUrl: string = null;\n  oldimageUrl: string = null;\n  uploadProgress: Observable<number>; \n  ref: AngularFireStorageReference;\n  downloadURL: Observable<string>;\n\n  constructor(private auth: AuthenticationService,private router: Router, private storage: AngularFireStorage) { \n  }\n\n\n  editprofile(form: NgForm) {\n\n    if(this.imageUrl!=null)\n    {\n      this.oldimageUrl=this.credentials.image;\n      this.credentials.image=this.imageUrl;\n      //this.deleteImage(this.oldimageUrl);\n      this.imageUrl=null;\n    }\n\n\n    this.auth.editprofile(this.credentials,this.auth.getUserDetails().id_user).subscribe(\n      () => {\n        this.router.navigateByUrl(\"/dashboard/home\");\n      },\n      err => {\n        console.error(err);\n      }\n    ); ;\n  }\n\n upload(event) \n  {\n    // Obtiene la imagen:\n    const file = event.target.files[0];\n    \n    // Genera un ID random para la imagen:\n    const randomId = Math.random().toString(36).substring(2);\n    const filepath = `Avatars/${randomId}`;\n    // Cargar imagen:\n    const task = this.storage.upload(filepath, file);\n    this.ref = this.storage.ref(filepath);\n    // Observa los cambios en el % de la barra de progresos:\n    this.uploadProgress = task.percentageChanges();\n    // Notifica cuando la URL de descarga está disponible:\n    task.snapshotChanges().pipe(\n      finalize(() => {\n        this.downloadURL = this.ref.getDownloadURL();  \n        this.downloadURL.subscribe(url => {this.imageUrl = url} );\n      })\n    ).subscribe();\n  }  \n\n  ngOnInit() {\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { publish } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Answers } from '../../models/answers';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswersService {\n\n  uri = 'http://localhost:3000/answers';\n\n  constructor(private http: HttpClient, private router: Router) {\n\n   }\n\n  addreply(answer: Answers): Observable<any> {\n    const url=` ${this.uri}/add`\n    console.log(answer);\n     return this.http.post(url, answer)\n  };\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { publish } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs'\nimport { Posts } from '../../models/posts';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  uri = 'http://localhost:3000/posts';\n\n  constructor(private http: HttpClient, private router: Router) {\n\n   }\n\n  addpost(post: Posts): Observable<any> {\n    const url=` ${this.uri}/add`\n    console.log(post);\n    return this.http.post(url, post);\n  };\n\n  getposts(): Observable<Posts[]> {\n    const url=` ${this.uri}/`\n    return this.http.get<Posts[]>(url);\n  };\n\n  getpostsOwner(id: number): Observable<Posts[]> {\n    const url = `${this.uri}/${id}`;\n    return this.http.get<Posts[]>(url);\n  }\n\n  deletePost(post: Posts): Observable<Posts>{\n    const url=` ${this.uri}/delete/${post.id_post}`\n    return this.http.delete<Posts>(url);\n  }\n\n  updatePost(post: Posts): Observable<any>\n  {\n    const url=` ${this.uri}/update`\n    return this.http.post(url, post);\n  }\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n  \tapiKey: \"AIzaSyDdh_e6e51Bmbtqv4ueDqsYk4kxkjzC8E4\",\n  \tauthDomain:\"fixlab-storage.firebaseapp.com\",\n  \tprojectId: \"fixlab-storage\",\n  \tstorageBucket: \"fixlab-storage.appspot.com\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","export class Answers {\n    id_answer? : number;\n    text? : string;\n    price? : number;\n    unlocked? : boolean;\n    valorated? : boolean;\n    id_owner? : number;\n    id_inpost?: number;\n}","export class Posts {\n    id_post? : number;\n    title? : string;\n    description? : string;\n    image? : string;\n    publish_date: Date = new Date();;\n    resolved? : boolean;\n    id_owner? : number;\n}"],"sourceRoot":""}